Хабр Geektimes Тостер Мой круг Фрилансим Мегапосты: Публикации Пользователи Хабы Компании Песочница Войти Регистрация 29,00 Рейтинг Проектирование и рефакторинг Реорганизация кода Все подряд Лучшие Авторы Без порога ≥10 ≥25 ≥50 ≥100 MrCheater вчера в 09:14 Размыкаем замыкания и внедряем Dependency Injection в JavaScript Блог компании Developer Soft, JavaScript, Node.JS, Программирование, Проектирование и рефакторинг Tutorial В этой статье мы рассмотрим, как писать чистый, легко тестируемый код в функциональном стиле, используя паттерн программирования Dependency Injection. Бонусом идет 100% юнит-тест coverage. Читать дальше → +25 93 7,8k 15 Ar20L80 9 февраля 2019 в 16:10 Подводные камни Java. Часть 1 Java, Программирование, Проектирование и рефакторинг Из песочницы Здравствуйте. Хочу представить вашему вниманию небольшую статью. Статья предназначена для начинающих. Но даже, если вы опытный разработчик, не делайте поспешных выводов. Надеюсь данная публикация будет полезна не только начинающим. Цель данной публикации: Показать наиболее часто встречающиеся ошибки начинающих и некоторые приемы их исправления. Понятно, что некоторые ошибки могут быть сложными и происходить по тем или иным причинам. Цель публикации в некоторой степени проанализировать их и помочь выявить на раннем этапе. Надеюсь данная публикация будет полезна начинающим. Контрольный список ошибок: Читать дальше → +7 80 6,4k 23 Kirill_Dan 7 февраля 2019 в 10:57 Почему не взлетел портал недвижимости. Часть 2 Программирование, Проектирование и рефакторинг, Развитие стартапа, Управление продуктом, Управление проектами Recovery Mode Продолжаю повествование о проекте Недвижимости, который пытался долго взлететь, но так и не взлетел. Пишу все как есть — личный опыт. Читать дальше → +8 20 3,2k 10 m1rko 4 февраля 2019 в 18:14 Lombok возвращает величие Java Java, Проектирование и рефакторинг Перевод Мы в Grubhub почти во всём бэкенде используем Java. Это проверенный язык, который за последние 20 лет доказал свою скорость и надёжность. Но с годами возраст «старичка» всё-таки начал сказываться. Java — один из самых популярных языков JVM, но не единственный. В последние годы конкуренцию ему составляют Scala, Clojure и Kotlin, которые обеспечивают новую функциональность и оптимизированные функции языка. Короче говоря, они позволяют делать больше с более лаконичным кодом. Читать дальше → +25 85 10,8k 26 Хабр рекомендует Разместить Несколько интересных кейсов с SAP HANA: потенциал big data и машинного обучения Объявляем конкурс статей от РТЛабс и Хабра Криптонит для мозга: IT-ребус от Криптонит Startup Challenge DassaultSystemes 29 января 2019 в 18:29 Кому эффективнее всего заниматься разводкой печатных плат? Блог компании DassaultSystèmes, Проектирование и рефакторинг Давайте вспомним, как распределялись обязанности специалистов в электронной промышленности лет 40 назад. Процесс делился на два основных этапа, первым из которых была разработка принципиальных схем, и занимались этим (да и до сих пор занимаются) инженеры-схемотехники. Многое с тех пор изменилось, но суть осталась той же. Читать дальше → +13 45 5,9k 24 okazan95 27 января 2019 в 16:48 Рефакторинга много не бывает Программирование, Проектирование и рефакторинг, Совершенный код Из песочницы Привет, Хабр! Представляю вашему вниманию перевод статьи "Refactoring — oops, I’ve been doing it backwards" автора Джастина Фуллера (Justin Fuller). Я очень завишу от рефакторинга, и не боюсь признать это, но есть только одна проблема: я всегда делал это задом наперед. Видите ли, то, что я делал, можно было бы точнее описать как преждевременную абстракцию кода. Мы все знаем о рефакторинге. Если вы прочитали хотя бы одну книгу по программированию или много времени сидите на Medium, то наверняка слышали об этом. Это важная концепция, которая делает код понятным, поддерживаемым и расширяемым. Так почему рефакторинг не оправдал моих надежд? Когда я писал свою последнюю библиотеку, мне потребовалось время, чтобы подумать об эволюции моего кода. Я понял, что до того, как у меня был полностью работающий продукт, и до того, как у меня были идеальные результаты моих модульных тестов, я преобразовал свой код в интерфейс, хотя не был даже уверен в том, понадобится-ли он мне. Я переместил код, сделал его расширяемым, многоразовым, но почему? Этот код даст мне окончательный результат, который мне нужен? Этого я еще не знал. В конце концов, все получилось, но был ли мой код более сложным, чем нужно? Думаю, что да. Читать дальше → +35 85 8,8k 6 f2heartz 25 января 2019 в 16:27 «Свет мой — зеркальце! — скажи, да дуал мой покажи...»: спроектируй один хороший фреймворк и получи второй в подарок Математика, ООП, Программирование, Проектирование и рефакторинг, Функциональное программирование Камни древних храмов умеют разговаривать, но мало кто им внемлет. Вселенная наполнена звуками, которые мы, люди, не слышим; цветами, которые не видим: иногда дело в объективных ограничениях тела и духа, но бывают также и субъективные причины — недостаток знаний и навыков или неумение ими пользоваться в повседневной практике. Яркий пример второго в мире программирования — сигнатуры функций. Дети ОО-мира в лучшем случае мыслят интерфейсами — это близко, но «не совсем то» и чем внимательнее становишься, тем больше это превращается в «совсем не то». А сигнатуры функций тоже умеют разговаривать. Читать дальше → +11 14 1,3k 2 marshinov 24 января 2019 в 19:47 О сущностях, DTO, ORM и Lazy Load .NET, C#, Проектирование и рефакторинг, Разработка веб-сайтов Объектно-ориентированная парадигма — стандарт для прикладного ПО. Реляционные СУБД — стандарт хранения данных в прикладном ПО. Да, можно писать и на Haskell и хранить данные исключительно в ClickHouse. Но речь о мейнстриме. ORM позволяет натянуть сову на глобус сделать вид, что RDBMS'а нет и данные хранятся в объектной модели, более подходящей для ООП. Остается «маленькая» такая проблемка — эта абстракция, как и многие другие, «течет». Там где в объектной модели ссылка на другой объект в базе данных foreign key и id. В момент материализации сущности мы встаем перед выбором: Загрузить все и упасть с out of memory / timeout Явно указать какие зависимости мы хотим загрузить, а какие — нет и нарушить принцип tell don't ask Загружать зависимости неявно по требованию с помощью Lazy Load и получить проблемы с производительностью где-то в вызываемом коде Какую-же ногу себе отрезать: левую или правую? TLDR Lazy Load не так плох, если использовать только для записи и не использовать при чтении. Но все не так просто и есть куча нюансов. Режь правую! +22 70 6,2k 6 Вакансии Web-дизайнер ООО Эно Групп Уфа Возможна удаленная работа от 40000 до 55000 Frontend-разработчик ООО Эно Групп Уфа Возможна удаленная работа от 40000 до 70000 Lead Java+NodeJS Software Engineer TestRigor AI Возможна удаленная работа от 2000 до 4000 ASP.NET/MVC разработчик (remote) 3dEYE Inc. Возможна удаленная работа от 2000 Аналитик (e-commerce, part time, remote) RevelTime Возможна удаленная работа от 100000 Все вакансии tkir 24 января 2019 в 09:10 Как победить дракона: переписываем вашу программу на Golang Блог компании Флант, Go, Анализ и проектирование систем, Программирование, Проектирование и рефакторинг Так случилось, что ваша программа написана на скриптовом языке — например, на Ruby — и встала необходимость переписать ее на Golang. Резонный вопрос: зачем вообще может понадобится переписывать программу, которая уже написана и нормально работает? Читать дальше → +23 45 9,4k 35 SergeyEgorov 18 января 2019 в 18:37 Разработка команды запроса данных из базы — часть 4, завершающая JavaScript, TDD, Проектирование и рефакторинг Tutorial Это продолжение истории, которая началась здесь, а продолжалась здесь и здесь. В прошлой части я написал интеграционный тест, демонстрирующий процесс инициализации и выполнения полного набора обработчиков, извлекающих данные из базы. Но поскольку от написания этого теста, до его запуска, может пройти слишком длительное время, необходимое для кодирования не только обработчика, но и правил настройки для всех необходимых запросов к базе, то сегодня я решил реализовать его модульную версию, расчитанную на конфигурирование и запуск всего одного обработчика. Выглядит это тест вот как: Читать дальше → +17 29 1,4k Комментировать ← сюда туда → 1 2 3 4 5 6 7 8 Объявляем конкурс статей от РТЛабс и Хабра Принять участие Спонсоры сообщества Криптонит Startup Challenge Конкурс технологических стартапов, снабжает IT-отрасль перспективными технологиями. RUVDS Облачный провайдер, поддерживает нас во всех начинаниях, но часто втягивает в авантюры РТЛабс Системный интегратор, радеет за коллаборацию государства и IT и помогает талантливым техноавторам Как стать спонсором? Вклад авторов AloneCoder 678.4 SergeyT 608.8 tangro 549 marshinov 333.6 azazelis 233 ilya42 224 m36 218 olegbunin 210 unconnected 204 crmMaster 192 100 лучших авторов Читают сейчас Сказ о сплаве Розе и отвалившейся КРЕНке 36,3k 60 Состоялся релиз Kali Linux 2019.1 6,4k 11 Подборка: 4 полезных сервиса для потенциальных иммигрантов в США, Европу и другие страны 9,4k 1 Андрей Гейм: Бойтесь технологического кризиса 9,2k 47 Серьёзные математические ошибки NHTSA позволили Tesla заявить о безопасности автопилота 9,5k 23 — А вы там в нефтехимии бензин делаете, да? 16,4k 115 Самое читаемое Сутки Неделя Месяц Сказ о сплаве Розе и отвалившейся КРЕНке +115 36,3k 77 60 Безумие дотфайлов +147 37,9k 190 255 Что не так с Raspberry Pi +103 62,6k 246 128 — А вы там в нефтехимии бензин делаете, да? +87 16,4k 63 115 Корпоративный туалет +8 20,8k 29 68 Увеличь это! Современное увеличение разрешения +351 97,9k 364 209 Яндекс! Спасибо за Uber +142 63,5k 37 235 InterNyet — как в Советском Союзе изобрели интернет и почему он не заработал +82 63,3k 175 241 Что не так с Raspberry Pi +103 62,6k 246 128 Собеседуем работодателя или как не уволиться в первый месяц +100 59k 270 162 Как я год не работал в Сбербанке +421 225k 329 577 Выброшенные на помойку умные лампочки — ценный источник личной информации +62 218k 92 147 Учёные нашли самое старое живое позвоночное на Земле +68 203k 71 211 Хотите вечных светодиодов? Расчехляйте паяльники и напильники. Или домашнее освещение самодельщика +88 148k 246 262 Про одного парня +206 118k 675 245 Хабр рекомендует Разместить Криптонит для мозга: IT-ребус от Криптонит Startup Challenge Несколько интересных кейсов с SAP HANA: потенциал big data и машинного обучения Аккаунт Войти Регистрация Разделы Публикации Хабы Компании Пользователи Песочница Информация Правила Помощь Документация Соглашение Конфиденциальность Услуги Реклама Тарифы Контент Семинары Приложения © 2006 – 2019 «TM» Настройка языка О сайте Служба поддержки Мобильная версия Настройка языка Интерфейс Русский English Язык публикаций Русский English Сохранить настройки